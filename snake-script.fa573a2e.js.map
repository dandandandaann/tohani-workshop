{"version":3,"sources":["snake/snake-script.ts"],"names":[],"mappings":";AA8FA,aA9FA,IAIK,EAJC,EAAoB,EACpB,EAAsB,GACtB,EAA2B,IAEjC,SAAK,GACD,EAAA,EAAA,QAAA,GAAA,UACA,EAAA,EAAA,WAAA,GAAA,aACA,EAAA,EAAA,UAAA,GAAA,YACA,EAAA,EAAA,UAAA,GAAA,YAJJ,CAAK,IAAA,EAAW,KAOhB,IAAM,EAAoB,IAAI,IAAkC,CAC5D,CAAC,EAAY,QAAS,OACtB,CAAC,EAAY,WAAY,QACzB,CAAC,EAAY,UAAW,OACxB,CAAC,EAAY,UAAW,UAGtB,EAAiB,IAAI,IAA0B,CACjD,CAAC,EAAY,SAAU,GACvB,CAAC,EAAY,YAAa,GAC1B,CAAC,EAAY,WAAY,GACzB,CAAC,EAAY,WAAY,KAQzB,EAAsC,KACtC,EAAe,EAEf,EAAQ,YAAY,WAAY,KAAW,GAqB/C,SAAA,EAAiB,EAA6B,GAC1C,EAAmB,EACnB,EAAe,EAGnB,SAAA,IAC4B,MAApB,IAKA,EAFO,EAAS,EAAkB,KAGlC,QAAQ,IAAI,iBAIpB,SAAA,EAAkB,EAA6B,GAC3C,IAAI,EAAwB,SAAS,cAAc,YAE/C,EAAY,iBAAiB,GAMjC,OAJA,EAAK,MAAM,GAAe,IAAG,SAAS,EAAU,IAAgB,GAIzD,CAAE,IAFC,SAAS,EAAe,KAEpB,KADH,SAAS,EAAgB,OAIxC,SAAA,EAAwB,GACpB,IAAI,EAAuB,SAAS,cAAc,SAC9C,EAAY,iBAAiB,GAE7B,EAAM,SAAS,EAAe,KAC9B,EAAO,SAAS,EAAgB,MAEpC,OAAI,EAAK,IAAM,EAAM,GAAoB,EAAK,IAAM,EAAM,GACrD,EAAK,KAAO,EAAO,GAAoB,EAAK,KAAO,EAAO,EAtDnE,SAAS,UAAY,SAAqC,GACtD,IAAI,EAAkB,GAUtB,QARe,IAAX,EAAG,IACH,EAAU,EAAG,SACsB,IAAtB,EAAI,cACjB,EAAgB,EAAI,mBACE,IAAf,EAAG,UACV,EAAU,EAAG,QAAQ,YAGrB,KAAW,EAAa,CACxB,IAAI,EAAO,EAAY,GAEvB,EAAQ,EAAkB,IAAI,GAAQ,EAAe,IAAI","file":"snake-script.fa573a2e.js","sourceRoot":"..\\src","sourcesContent":["const baseSpeed: number = 4;\r\nconst timeSpeedMs: number = 50;\r\nconst hitErrorMarginPx: number = 18;\r\n\r\nenum MovementKey {\r\n    ArrowUp,\r\n    ArrowRight,\r\n    ArrowDown,\r\n    ArrowLeft,\r\n}\r\n\r\nconst DirectionProperty = new Map<MovementKey, 'top' | 'left'> ([\r\n    [MovementKey.ArrowUp, 'top'],\r\n    [MovementKey.ArrowRight, 'left'],\r\n    [MovementKey.ArrowDown, 'top'],\r\n    [MovementKey.ArrowLeft, 'left'],\r\n]);\r\n\r\nconst DirectionSpeed = new Map<MovementKey, number> ([\r\n    [MovementKey.ArrowUp, -baseSpeed],\r\n    [MovementKey.ArrowRight, +baseSpeed],\r\n    [MovementKey.ArrowDown, +baseSpeed],\r\n    [MovementKey.ArrowLeft, -baseSpeed],\r\n]);\r\n\r\ninterface Position {\r\n    top: number;\r\n    left: number;\r\n}\r\n\r\nvar currentDirection: 'top'|'left'|null = null;\r\nvar currentSpeed = baseSpeed;\r\n\r\nvar timer = setInterval(function(){ Time(); }, timeSpeedMs); \r\n// clearInterval(timer);\r\n\r\ndocument.onkeydown = function (this: GlobalEventHandlers, ev : KeyboardEvent): any {\r\n    var keyCode: string = \"\";\r\n\r\n    if (ev.key !== undefined) {\r\n        keyCode = ev.key;\r\n    } else if ((<any>ev).keyIdentifier !== undefined) {\r\n        keyCode = (<any>ev).keyIdentifier;\r\n    } else if (ev.keyCode !== undefined) {\r\n        keyCode = ev.keyCode.toString();\r\n    }\r\n\r\n    if (keyCode in MovementKey) {\r\n        let move = MovementKey[keyCode as keyof typeof MovementKey]\r\n\r\n        SetMove(DirectionProperty.get(move)!, DirectionSpeed.get(move)!);\r\n    }\r\n}\r\n\r\nfunction SetMove(cssProperty: 'top' | 'left', speed: number) {\r\n    currentDirection = cssProperty;\r\n    currentSpeed = speed;\r\n}\r\n\r\nfunction Time() {\r\n    if (currentDirection == null)\r\n        return;\r\n\r\n    let head = MoveHead(currentDirection, currentSpeed);\r\n\r\n    if (CheckIfHitFood(head)) {\r\n        console.log('food was hit');\r\n    }\r\n}\r\n\r\nfunction MoveHead(cssProperty: 'top' | 'left', speed: number): Position {\r\n    let head = <HTMLDivElement> document.querySelector('div#head');\r\n\r\n    let headStyle = getComputedStyle(head);\r\n\r\n    head.style[cssProperty] = `${parseInt(headStyle[cssProperty]) + speed}`;\r\n\r\n    let top = parseInt(headStyle['top']);\r\n    let left = parseInt(headStyle['left']);\r\n    return { top, left };\r\n}\r\n\r\nfunction CheckIfHitFood(head: Position) {\r\n    let food = <HTMLDivElement>document.querySelector('#food');\r\n    let foodStyle = getComputedStyle(food);\r\n\r\n    let top = parseInt(foodStyle['top']);\r\n    let left = parseInt(foodStyle['left']);\r\n\r\n    if((head.top > top - hitErrorMarginPx && head.top < top + hitErrorMarginPx) &&\r\n        (head.left > left - hitErrorMarginPx && head.left < left + hitErrorMarginPx))\r\n        return true;\r\n\r\n    return false;\r\n}"]}