{"version":3,"sources":["snake/snake-script.ts"],"names":[],"mappings":";AAmFA,aAnFA,IAAM,EAAY,EACZ,EAAc,GACd,EAAmB,GAEnB,EAAW,CACb,QAAS,UACT,WAAY,aACZ,UAAW,YACX,UAAW,aAGT,EAAoB,CACtB,QAAS,MACT,WAAY,OACZ,UAAW,MACX,UAAW,QAGT,EAAiB,CACnB,SAAU,EACV,YAAa,EACb,WAAY,EACZ,WAAY,GAGZ,EAAmB,GACnB,EAAe,EAEf,EAAQ,YAAY,WAAY,KAAW,GAmB/C,SAAA,EAAiB,EAAa,GAC1B,EAAmB,EACnB,EAAe,EAGnB,SAAA,IAGQ,EAFO,EAAS,EAAkB,KAGlC,QAAQ,IAAI,gBAIpB,SAAA,EAAkB,EAAa,GAC3B,IAAI,EAAO,SAAS,cAAc,SAC9B,EAAY,iBAAiB,GAMjC,OAJA,EAAK,MAAM,GAAe,IAAG,SAAS,EAAU,IAAgB,GAIzD,CAAE,IAFC,SAAS,EAAe,KAEpB,KADH,SAAS,EAAgB,OAIxC,SAAA,EAAwB,GACpB,IAAI,EAAO,SAAS,cAAc,SAC9B,EAAY,iBAAiB,GAE7B,EAAM,SAAS,EAAe,KAC9B,EAAO,SAAS,EAAgB,MAEpC,OAAI,EAAK,IAAM,EAAM,GAAoB,EAAK,IAAM,EAAM,GACrD,EAAK,KAAO,EAAO,GAAoB,EAAK,KAAO,EAAO,EAhDnE,SAAS,UAAY,SAAU,EAAO,GAClC,IAAI,OAEc,IAAd,EAAM,IACN,EAAO,EAAM,SACkB,IAAxB,EAAM,cACb,EAAO,EAAM,mBACY,IAAlB,EAAM,UACb,EAAO,EAAM,SAGX,EAAS,IACX,EAAQ,EAAkB,GAAO,EAAe","file":"snake-script.77567b21.js","sourceRoot":"..\\src","sourcesContent":["const moveSpeed = 4;\r\nconst timeSpeedMs = 50;\r\nconst hitErrorMarginPx = 18;\r\n\r\nconst validKey = {\r\n    ArrowUp: \"ArrowUp\",\r\n    ArrowRight: \"ArrowRight\",\r\n    ArrowDown: \"ArrowDown\",\r\n    ArrowLeft: \"ArrowLeft\"\r\n}\r\n\r\nconst directionProperty = {\r\n    ArrowUp: \"top\",\r\n    ArrowRight: \"left\",\r\n    ArrowDown: \"top\",\r\n    ArrowLeft: \"left\"\r\n}\r\n\r\nconst directionSpeed = {\r\n    ArrowUp: -moveSpeed,\r\n    ArrowRight: +moveSpeed,\r\n    ArrowDown: +moveSpeed,\r\n    ArrowLeft: -moveSpeed\r\n}\r\n\r\nvar currentDirection = '';\r\nvar currentSpeed = moveSpeed;\r\n\r\nvar timer = setInterval(function(){ Time(); }, timeSpeedMs); \r\n// clearInterval(timer);\r\n\r\ndocument.onkeydown = function (event, callback) {\r\n    var code;\r\n\r\n    if (event.key !== undefined) {\r\n        code = event.key;\r\n    } else if (event.keyIdentifier !== undefined) {\r\n        code = event.keyIdentifier;\r\n    } else if (event.keyCode !== undefined) {\r\n        code = event.keyCode;\r\n    }\r\n\r\n    if (!!validKey[code]) {\r\n        SetMove(directionProperty[code], directionSpeed[code]);\r\n    }\r\n}\r\n\r\nfunction SetMove(cssProperty, speed) {\r\n    currentDirection = cssProperty;\r\n    currentSpeed = speed;\r\n}\r\n\r\nfunction Time() {\r\n    let head = MoveHead(currentDirection, currentSpeed);\r\n\r\n    if (CheckIfHitFood(head)) {\r\n        console.log('food was hit');\r\n    }\r\n}\r\n\r\nfunction MoveHead(cssProperty, speed) {\r\n    let head = document.querySelector('#head');\r\n    let headStyle = getComputedStyle(head);\r\n\r\n    head.style[cssProperty] = `${parseInt(headStyle[cssProperty]) + speed}`;\r\n\r\n    let top = parseInt(headStyle['top']);\r\n    let left = parseInt(headStyle['left']);\r\n    return { top, left };\r\n}\r\n\r\nfunction CheckIfHitFood(head) {\r\n    let food = document.querySelector('#food');\r\n    let foodStyle = getComputedStyle(food);\r\n\r\n    let top = parseInt(foodStyle['top']);\r\n    let left = parseInt(foodStyle['left']);\r\n\r\n    if((head.top > top - hitErrorMarginPx && head.top < top + hitErrorMarginPx) &&\r\n        (head.left > left - hitErrorMarginPx && head.left < left + hitErrorMarginPx))\r\n        return true;\r\n\r\n    return false;\r\n}"]}