{"version":3,"sources":["snake/snake-script.js"],"names":["moveSpeed","timeSpeedMs","hitErrorMarginPx","validKey","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","directionProperty","directionSpeed","currentDirection","currentSpeed","timer","setInterval","Time","SetMove","cssProperty","speed","CheckIfHitFood","MoveHead","console","log","head","document","querySelector","headStyle","getComputedStyle","style","parseInt","top","left","food","foodStyle","onkeydown","event","callback","code","undefined","key","keyIdentifier","keyCode"],"mappings":";AAAA,IAAMA,EAAY,EACZC,EAAc,GACdC,EAAmB,GAEnBC,EAAW,CACbC,QAAS,UACTC,WAAY,aACZC,UAAW,YACXC,UAAW,aAGTC,EAAoB,CACtBJ,QAAS,MACTC,WAAY,OACZC,UAAW,MACXC,UAAW,QAGTE,EAAiB,CACnBL,SAAUJ,EACVK,YAAaL,EACbM,WAAYN,EACZO,WAAYP,GAGZU,EAAmB,GACnBC,EAAeX,EAEfY,EAAQC,YAAY,WAAYC,KAAWb,GAmB/C,SAASc,EAAQC,EAAaC,GAC1BP,EAAmBM,EACnBL,EAAeM,EAGnB,SAASH,IAGDI,EAFOC,EAAST,EAAkBC,KAGlCS,QAAQC,IAAI,gBAIpB,SAASF,EAASH,EAAaC,GAC3B,IAAIK,EAAOC,SAASC,cAAc,SAC9BC,EAAYC,iBAAiBJ,GAMjC,OAJAA,EAAKK,MAAMX,GAAkBY,GAAAA,OAAAA,SAASH,EAAUT,IAAgBC,GAIzD,CAAEY,IAFCD,SAASH,EAAe,KAEpBK,KADHF,SAASH,EAAgB,OAIxC,SAASP,EAAeI,GACpB,IAAIS,EAAOR,SAASC,cAAc,SAC9BQ,EAAYN,iBAAiBK,GAE7BF,EAAMD,SAASI,EAAe,KAC9BF,EAAOF,SAASI,EAAgB,MAEpC,OAAIV,EAAKO,IAAMA,EAAM3B,GAAoBoB,EAAKO,IAAMA,EAAM3B,GACrDoB,EAAKQ,KAAOA,EAAO5B,GAAoBoB,EAAKQ,KAAOA,EAAO5B,EAhDnEqB,SAASU,UAAY,SAAUC,EAAOC,GAClC,IAAIC,OAEcC,IAAdH,EAAMI,IACNF,EAAOF,EAAMI,SACkBD,IAAxBH,EAAMK,cACbH,EAAOF,EAAMK,mBACYF,IAAlBH,EAAMM,UACbJ,EAAOF,EAAMM,SAGXrC,EAASiC,IACXrB,EAAQP,EAAkB4B,GAAO3B,EAAe2B","file":"snake-script.fd43a994.js","sourceRoot":"..\\src","sourcesContent":["const moveSpeed = 4;\r\nconst timeSpeedMs = 50;\r\nconst hitErrorMarginPx = 18;\r\n\r\nconst validKey = {\r\n    ArrowUp: \"ArrowUp\",\r\n    ArrowRight: \"ArrowRight\",\r\n    ArrowDown: \"ArrowDown\",\r\n    ArrowLeft: \"ArrowLeft\"\r\n}\r\n\r\nconst directionProperty = {\r\n    ArrowUp: \"top\",\r\n    ArrowRight: \"left\",\r\n    ArrowDown: \"top\",\r\n    ArrowLeft: \"left\"\r\n}\r\n\r\nconst directionSpeed = {\r\n    ArrowUp: -moveSpeed,\r\n    ArrowRight: +moveSpeed,\r\n    ArrowDown: +moveSpeed,\r\n    ArrowLeft: -moveSpeed\r\n}\r\n\r\nvar currentDirection = '';\r\nvar currentSpeed = moveSpeed;\r\n\r\nvar timer = setInterval(function(){ Time(); }, timeSpeedMs); \r\n// clearInterval(timer);\r\n\r\ndocument.onkeydown = function (event, callback) {\r\n    var code;\r\n\r\n    if (event.key !== undefined) {\r\n        code = event.key;\r\n    } else if (event.keyIdentifier !== undefined) {\r\n        code = event.keyIdentifier;\r\n    } else if (event.keyCode !== undefined) {\r\n        code = event.keyCode;\r\n    }\r\n\r\n    if (!!validKey[code]) {\r\n        SetMove(directionProperty[code], directionSpeed[code]);\r\n    }\r\n}\r\n\r\nfunction SetMove(cssProperty, speed) {\r\n    currentDirection = cssProperty;\r\n    currentSpeed = speed;\r\n}\r\n\r\nfunction Time() {\r\n    let head = MoveHead(currentDirection, currentSpeed);\r\n\r\n    if (CheckIfHitFood(head)) {\r\n        console.log('food was hit');\r\n    }\r\n}\r\n\r\nfunction MoveHead(cssProperty, speed) {\r\n    let head = document.querySelector('#head');\r\n    let headStyle = getComputedStyle(head);\r\n\r\n    head.style[cssProperty] = `${parseInt(headStyle[cssProperty]) + speed}`;\r\n\r\n    let top = parseInt(headStyle['top']);\r\n    let left = parseInt(headStyle['left']);\r\n    return { top, left };\r\n}\r\n\r\nfunction CheckIfHitFood(head) {\r\n    let food = document.querySelector('#food');\r\n    let foodStyle = getComputedStyle(food);\r\n\r\n    let top = parseInt(foodStyle['top']);\r\n    let left = parseInt(foodStyle['left']);\r\n\r\n    if((head.top > top - hitErrorMarginPx && head.top < top + hitErrorMarginPx) &&\r\n        (head.left > left - hitErrorMarginPx && head.left < left + hitErrorMarginPx))\r\n        return true;\r\n\r\n    return false;\r\n}"]}